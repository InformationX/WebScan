# 安装masscan
github： https://github.com/robertdavidgraham/masscan/

$ sudo apt-get install git gcc make libpcap-dev
$ git clone https://github.com/robertdavidgraham/masscan
$ cd masscan
$ make

把编译好的masscan（在bin目录下面）放到/usr/local/bin目录下，就直接可以在命令行调用。

## 调用
注意要以root权限运行

# 安装zgrab-mini
获取服务banner信息
github： https://github.com/RickGray/zgrab-mini

shell : masscan -p0-65535 10.6.65.218 --rate 5000 | awk -F '/' '{print $1" "$2}' | awk '{print $7":"$4}' | zgrab-mini

# rabbitmq
docker pull rabbitmq:3.7.15-management
docker run -d --name rabbitmq3.7.15 -p 5672:5672 -p 15672:15672 -v `pwd`/data:/var/lib/rabbitmq --hostname myRabbit -e RABBITMQ_DEFAULT_VHOST=my_vhost  -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=sdutsec rabbitmq:3.7.15-management

# mongo
docker pull mongo
创建本地数据文件夹
mkdir /data/mongodb0
启动MongoDB容器
docker run --name mongodb-server0 -v /data/mongodb0:/data/db -p 27017:27017 -d 镜像ID/镜像名


-d 后台运行容器；
--name 指定容器名；
-p 指定服务运行的端口（5672：应用访问端口；15672：控制台Web端口号）；
-v 映射目录或文件；
--hostname  主机名（RabbitMQ的一个重要注意事项是它根据所谓的 “节点名称” 存储数据，默认为主机名）；
-e 指定环境变量；（RABBITMQ_DEFAULT_VHOST：默认虚拟机名；RABBITMQ_DEFAULT_USER：默认的用户名；RABBITMQ_DEFAULT_PASS：默认用户名的密码）

# celery
celery -A celery_tasks.main  worker --loglevel=info -P gevent --without-heartbeat
--concurrency=4  #并发数量
celery -A celery_tasks.main  beat --loglevel=info

--without-heartbeat  关闭心跳包

# rsync
rsync --rsh="ssh" -pthrvz  archerx@10.6.65.240:~/PycharmProjects/WebScan  /root/xscan

# install nmap on Ubuntu
apt-get install nmap

apt-get install hydra

# Elasticsearch & Kibana
docker pull docker.elastic.co/elasticsearch/elasticsearch:7.3.0
docker run -it --name elasticsearch -d -p 9200:9200 -p 9300:9300 -p 5601:5601 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.0

docker pull docker.elastic.co/kibana/kibana:7.3.0
docker run -it -d -e ELASTICSEARCH_URL=http://192.168.33.136:9200 --name kibana --network=container:elasticsearch docker.elastic.co/kibana/kibana:7.3.0

### docker node
https://blog.csdn.net/rznice/article/details/52211620'

切换到项目根目录(ubuntu-Dockerfile)
docker build -t archerx/node:1.0 -f Docker/Dockerfile .

### 安装RDPassSpray依赖
```
apt-get install python-apt
apt-get install xfreerdp  或者  sudo apt-get install freerdp-x11     #前后这两个其实是一个东西
````

